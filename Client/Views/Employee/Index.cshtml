@model IEnumerable<API.DTOs.Employees.GetEmployeeDto>

@{
    ViewData["Title"] = "Index";
    
}
@if (TempData["Success"] != null)
{  
    <script>
        Swal.fire({
            title: '@(TempData["Success"])',
            icon: 'success',
            confirmButtonText: 'OK'
        });
        console.log("hai");
    </script>
}
else if (TempData["Error"] != null)
{
    <script>
        Swal.fire({
            title: '@(TempData["Error"])',
            icon: 'error',
            confirmButtonText: 'OK'
        });
        console.log("hai2");
    </script>
}

<h1>List of Employee</h1>

<p>
    <a href="Employee/Create" class="btn btn-success">Create</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Guid)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Nik)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BirthDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HiringDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </th>
            <th class="text-center">Action</th>
        </tr>
    </thead>
    <tbody>
        @{
            int i = 0;
        }
        @foreach (var item in Model)
        {
            
            <tr>
                <td>
                    @(++i)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Nik)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @item.BirthDate.ToString("dd-MM-yyyy")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @item.HiringDate.ToString("dd-MM-yyyy")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { Guid = item.Guid }, new {@class = "btn btn-warning mb-2"}) 
                    @Html.ActionLink("Details", "Details",  new { Guid = item.Guid }, new {@class = "btn btn-info mb-2"} )
                    <form asp-action="DeletePOST" method="post" class="d-inline-block" asp-route-guid="@item.Guid">
                        
                        <button type="submit" class="btn btn-danger mb-2" onclick="return confirm('Are you sure?')">Delete</button>
                    </form>
                    
                    
                </td>
            </tr>
        }
    </tbody>
</table>





<!-- <script src="~/js/ajax.js" asp-append-version="true"></script> -->